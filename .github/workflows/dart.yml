name: Flutter Build Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        flutter_channel: [stable, beta]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: ${{ matrix.flutter_channel }}

    - name: Get dependencies
      run: flutter pub get

    - name: Analyze and format code
      run: flutter analyze && flutter format --set-exit-if-changed

    - name: Build APK
      if: matrix.os == 'ubuntu-latest'
      run: flutter build apk

    - name: Build iOS app
      if: matrix.os == 'macos-latest'
      run: flutter build ios --release --no-codesign

    # - name: Archive and export iOS app
    #   if: matrix.os == 'macos-latest'
    #   uses: devbotsxyz/apple-sign@v1
    #   with:
    #     app_path: build/ios/archive/Runner.xcarchive
    #     export_path: build/ios/ipa
    #     export_options_plist_path: Runner/exportOptions.plist
    #     apple_id: ${{ secrets.APPLE_ID }}
    #     apple_id_password: ${{ secrets.APPLE_ID_PASSWORD }}

    - name: Build web app
      if: matrix.os == 'ubuntu-latest'
      run: flutter build web

    - name: Build macOS app
      if: matrix.os == 'macos-latest'
      run: flutter build macos --release

    - name: Build Windows app
      if: matrix.os == 'windows-latest'
      run: flutter build windows --release

    - name: Build Linux app
      if: matrix.os == 'ubuntu-latest'
      run: flutter build linux --release

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: app-release
        path: |
          build/app/outputs/flutter-apk/app-release.apk
          build/web
          build/macos/Build/Products/Release/runner.app
          build/windows/runner/Release/*
          build/linux/x64/*
          # build/ios/ipa/*.ipa
